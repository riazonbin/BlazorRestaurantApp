@page "/menu/add-item"
@using BlazorRestaurantApp.Data;
@using BlazorRestaurantApp.Enums;
@using BlazorRestaurantApp.Services;
@using System.ComponentModel.DataAnnotations;
@inject FileSystemService fileSystemService
@inject MongoConnection mongoConnection;
@inject NavigationManager navigationManager;
@inject ISnackbar Snackbar

<h1>Добавление нового блюда</h1>

<EditForm Model="menuItem" OnValidSubmit="@AddMenuItem" Context="contextMenu">
    <MudCard Elevation="2">
        <MudCardContent>
            <MudGrid xs="12" sm="7">
                <MudItem>
                    <MudCard>
                        <MudCardContent>
                            <MudTextField @bind-Value="menuItem.Name" Label="Наименование" For="@(() => menuItem.Name)"/>
                            <MudTextField @bind-Value="menuItem.Description" Label="Описание" For="@(() => menuItem.Description)" />
                            <MudTextField @bind-Value="menuItem.Price" Label="Стоимость" For="@(() => menuItem.Price)" />
                            <MudSelect T="DishTypes" Label="Тип блюда" @bind-Value="@menuItem.DishType">
                                @foreach (DishTypes typeOfDish in Enum.GetValues(typeof(DishTypes)).Cast<DishTypes>())
                                {
                                    if(typeOfDish == DishTypes.None)
                                    {
                                        continue;
                                    }
                                    var valueName = typeof(DishTypes).GetMember(typeOfDish.ToString())[0]
                                    .GetCustomAttributes(typeof(DisplayAttribute), false)
                                    .OfType<DisplayAttribute>()
                                    .FirstOrDefault()?.Name;
                                    <MudSelectItem Value="@typeOfDish">@valueName</MudSelectItem>
                                }
                            </MudSelect>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>

            <MudDivider />


            <MudCard>
                <MudCardContent>
                    <MudImage Src="@imageData" alt="Изображение" />
                    <div class="image-info">
                        <div class="title">Загруженное изображение:</div>
                        <div class="subtitle">@file?.Name</div>
                    </div>
                    <MudFileUpload T="IBrowserFile" OnFilesChanged="@HandleFileUpload" Accept=".png, .jpg, .jpeg" SuppressOnChangeWhenInvalid>
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                    Variant="Variant.Filled"
                                    Color="Color.Primary"
                                    StartIcon="@Icons.Material.Filled.CloudUpload"
                                    for="@context">
                            Загрузить файл
                        </MudButton>
                    </ButtonTemplate>
                    </MudFileUpload>
                </MudCardContent>
            </MudCard>

            <MudDivider />

            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Добавить</MudButton>
            </MudCardActions>
        </MudCardContent>
    </MudCard>

</EditForm>

@code {
    private MenuItem menuItem = new MenuItem();
    private IBrowserFile file;
    private string imageData;

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        file = e.File;

        using var stream = file.OpenReadStream(2000000);
        var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);

        var imageDataBytes = memoryStream.ToArray();
        var base64ImageString = Convert.ToBase64String(imageDataBytes);

        imageData = $"data:{file.ContentType};base64,{base64ImageString}";
    }

    private async Task AddMenuItem()
    {
        try
        {
            if (file is not null)
            {
                var imageId = await fileSystemService.UploadItemToDb(file.OpenReadStream(), file.Name.ToString());

                menuItem.ImageId = imageId;
            }
            mongoConnection.AddMenuItemToDatabase(menuItem);

            navigationManager.NavigateTo("/menu");
        }
        catch
        {
            Snackbar.Add("Слишкой большой вес изображения!");
        }

    }
}
