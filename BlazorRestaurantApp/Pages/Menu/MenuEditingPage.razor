@page "/menu/edit-item/{id}"
@using BlazorRestaurantApp.Data;
@using BlazorRestaurantApp.Enums;
@using BlazorRestaurantApp.Services;
@using MongoDB.Bson;
@using System.ComponentModel.DataAnnotations;
@inject FileSystemService fileSystemService
@inject MongoConnection mongoConnection
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar;
@inject UserService userService;

@if(userService.currentUser?.Role != UserRoles.Employee)
{
    return;
}

<MudCard>
    <MudCardContent>
        <MudForm>
            <MudTextField @bind-Value="menuItem.Name" Label="Наименование" />
            <MudTextField @bind-Value="menuItem.Description" Label="Описание" />
            <MudNumericField @bind-Value="menuItem.Price" Label="Стоимость" Variant="Variant.Text" Min="0" For="(() => menuItem.Price)"/>
            <MudNumericField @bind-Value="menuItem.Weight" Label="Вес" Variant="Variant.Text" Min="0" For="(() => menuItem.Weight)"/>
            <MudSelect T="DishTypes" Label="Тип блюда" @bind-Value="@menuItem.DishType">
                @foreach (DishTypes typeOfDish in Enum.GetValues(typeof(DishTypes)).Cast<DishTypes>())
                {
                    if (typeOfDish == DishTypes.None)
                    {
                        continue;
                    }
                    var valueName = typeof(DishTypes).GetMember(typeOfDish.ToString())[0]
                    .GetCustomAttributes(typeof(DisplayAttribute), false)
                    .OfType<DisplayAttribute>()
                    .FirstOrDefault()?.Name;
                                                <MudSelectItem Value="@typeOfDish">@valueName</MudSelectItem>
                }
            </MudSelect>

            <MudFileUpload T="IBrowserFile" OnFilesChanged="@HandleFileUpload">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                                Variant="Variant.Filled"
                                Color="Color.Primary"
                                StartIcon="@Icons.Material.Filled.CloudUpload"
                                for="@context">
                        Загрузить файл
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>

            <MudDivider></MudDivider>

            <MudImage Src="@imageData" alt="Блюдо из меню" />

            <MudDivider></MudDivider>
            <br />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@UpdateMenuItem">Обновить</MudButton>
            <br /><br />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@DeleteMenuItem">Удалить из меню</MudButton>
        </MudForm>
    </MudCardContent>
</MudCard>



@code {
    private MenuItem menuItem = new MenuItem();
    private IBrowserFile? file;
    private string? imageData;

    [Parameter]
    public string Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        menuItem = await mongoConnection.FindMenuItemById(Id);
        imageData = GetImageSource(menuItem.ImageId);
    }

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        file = e.File;

        using var stream = file.OpenReadStream(2000000);
        var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);

        var imageDataBytes = memoryStream.ToArray();
        var base64ImageString = Convert.ToBase64String(imageDataBytes);

        imageData = $"data:{file.ContentType};base64,{base64ImageString}";
    }

    private async Task UpdateMenuItem()
    {
        try
        {
            if (file is not null)
            {
                var newImageId = await fileSystemService.UpdateItemInDb(file.OpenReadStream(), menuItem, file.Name);
                menuItem.ImageId = newImageId;
            }
            mongoConnection.UpdateMenuItem(menuItem);
            navigationManager.NavigateTo("/menu");
        }
        catch
        {
            Snackbar.Add("Слишком большой вес изображения!");
        }
    }

    private async Task DeleteMenuItem()
    {
        await mongoConnection.DeleteMenuItemAsync(menuItem);
        navigationManager.NavigateTo("/menu");
    }

    private string GetImageSource(ObjectId imageId)
    {
        try
        {
            var imageData = fileSystemService.DownloadItemFromDbByIdAsBytes(imageId);

            var base64Image = Convert.ToBase64String(imageData);

            return $"data:image/png;base64,{base64Image}";
        }
        catch { return ""; }
    }
}

