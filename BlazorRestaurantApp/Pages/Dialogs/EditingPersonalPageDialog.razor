@using BlazorRestaurantApp.Enums;
@using BlazorRestaurantApp.Services;
@using BlazorRestaurantApp.Data;
@using Majorsoft.Blazor.Components.Timer;
@using BlazorRestaurantApp.Shared.Components.CustomerComponents;
@using BlazorRestaurantApp.Shared.Components.ManagerComponents;
@using System.ComponentModel.DataAnnotations;
@inject MongoConnection mongoConnection;
@inject UserService userService;
@inject TimerService timerService;
@inject ILocalStorageService localStorageService;
@inject ISnackbar Snackbar;



<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.ChangeCircle" Class="mr-3 mb-n1"/>
            Редактирование данных
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="@_form">
            <MudTextField T="string" Label="Фамилия" @bind-Text=@model.Lastname For="@(() => model.Lastname)"></MudTextField>
            <MudTextField T="string" Label="Имя"  @bind-Text=@model.Firstname For="@(() => model.Firstname)"></MudTextField>
            <MudTextField T="string" Label="Отчество"  @bind-Text=@model.Patronymic For="@(() => model.Patronymic)"></MudTextField>
            <MudTextField T="string" InputType="InputType.Email" Label="Почта" @bind-Text=@model.Email For="@(() => model.Email)"></MudTextField>
            <MudTextField T="string" InputType="InputType.Password" Label="Пароль" @bind-Text=@model.Password For="@(() => model.Password)"></MudTextField>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="Cancel" Color="Color.Primary">Отмена</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="UpdateUser" Color="Color.Primary">Сохранить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    MudForm? _form;

    Customer model = new Customer();

    protected override Task OnInitializedAsync()
    {
        model = mongoConnection.FindCustomerByEmail(userService.currentUser.Email);
        return base.OnInitializedAsync();
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    async Task UpdateUser()
    {
        if(!_form.IsValid)
        {
            Snackbar.Add("Не корректные новые данные", Severity.Error);
            return;
        }
        await mongoConnection.UpdateCustomer(model);
        userService.currentUser = model;
        await localStorageService.SetAsync<User>("CurrentUser", userService.currentUser);

        MudDialog.Close(DialogResult.Ok(true));
    }
}
