@using BlazorRestaurantApp.Data;
@using BlazorRestaurantApp.Enums;
@using BlazorRestaurantApp.Services;
@using System.Text.Json;
@using Microsoft.AspNetCore.Identity;
@inject MongoConnection mongoConnection
@inject IDialogService DialogService
@inject NavigationManager navManager;
@inject ILocalStorageService localStorageService;
@inject UserService userService;

@page "/authorizationPage"

<form @onsubmit="@(() => OnValidSubmit())">
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardHeader><h2>Авторизация</h2></MudCardHeader>
            <MudCardContent>
                <MudTextField Label="Почта" Class="mt-3"
                              @bind-Value="user.Email" For="@(() => user.Email)"/>
                <MudTextField Label="Пароль" HelperText="Минимум 8 символов" Class="mt-3"
                              @bind-Value="user.Password" For="@(() => user.Password)" InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Войти</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>
</form>

@if (!isCorrectAuthorizationUser)
{
    <MudAlert Severity="Severity.Error">Неверная почта или пароль!</MudAlert>
}


@code {
    User user = new User();

    bool isCorrectAuthorizationUser = true;

    private async Task OnValidSubmit()
    {
        isCorrectAuthorizationUser = true;
        User? foundedUser;

        if ((foundedUser = mongoConnection.FindUserByEmail(user.Email)) == null)
        {
            isCorrectAuthorizationUser = false;
            return;
        }
        else
        {
            if(foundedUser.Password != user.Password)
            {
                isCorrectAuthorizationUser = false;
                return;
            }
            userService.currentUser = foundedUser;
            await localStorageService.SetAsync<User>("CurrentUser", foundedUser);
            if(foundedUser.Role == UserRoles.Customer)
            {
                navManager.NavigateTo("/menu");
            }
            else
            {
                navManager.NavigateTo("/menu");
            }
            StateHasChanged();
        }

    }

}
