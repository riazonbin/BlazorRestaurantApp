@using BlazorRestaurantApp.Data;
@using BlazorRestaurantApp.Services;
@inject UserService userService

<MudNavMenu Class="mud-height-full" Style="background-color:white" Color="Color.Primary">
    <MudDivider Class="my-2" />
    @if(isLoadingNavMenu)
    {
        <MudProgressLinear Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
        return;
    }

    @if (userService.currentUser is null)
    {
        <MudNavLink Href="/regPage" Icon="@Icons.Material.Filled.HowToReg">Регистрация</MudNavLink>
        <MudNavLink Href="/authorizationPage" Icon="@Icons.Material.Filled.SwitchAccount">Авторизация</MudNavLink>
        return;
    }

    <MudNavLink Href="/home" Icon="@Icons.Material.Filled.Home">Домашняя страница</MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.AccountBox" Href="/personal-info">Личный кабинет</MudNavLink>
    <MudNavLink Href="/menu" Icon="@Icons.Material.Filled.RestaurantMenu">Меню</MudNavLink>
    <MudNavGroup Icon="@Icons.Material.Filled.Work" Title="Заказы">
        <MudNavLink Href="/orders-details" Icon="@Icons.Material.Filled.List">Текущие заказы</MudNavLink>
        <MudNavLink Href="/orders-history" Icon="@Icons.Material.Filled.History">История заказов</MudNavLink>
    </MudNavGroup>

    @if (userService.currentUser.Role == Enums.UserRoles.Customer)
    {
        <MudNavLink Href="/cart" Icon="@Icons.Material.Filled.ShoppingCart">Корзина</MudNavLink>
        <MudNavGroup Icon="@Icons.Material.Filled.Assignment" Title="Бронирования">
            <MudNavLink Icon="@Icons.Material.Filled.Add" Href="/add-reservation">Добавить</MudNavLink>
            <MudNavLink Icon="@Icons.Material.Filled.ViewList" Href="/reservations-info">Ваши бронирования</MudNavLink>
        </MudNavGroup>
    }
    else
    {
        <MudNavLink Icon="@Icons.Material.Filled.Assessment" Href="/reservations-info">Бронирования клиентов</MudNavLink>
    }

</MudNavMenu>


@*<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Ресторан</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Домашняя страница
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/regPage" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Регистрация
            </NavLink>
        </div>
    </nav>
</div>*@

@code {
    private bool collapseNavMenu = true;
    bool isLoadingNavMenu = false;

    protected override Task OnInitializedAsync()
    {
        isLoadingNavMenu = true;
        return base.OnInitializedAsync();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        StateHasChanged();
        isLoadingNavMenu = false;
    }

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
